---
- name: Install aptitude using apt
  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

- name: Install required system packages
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  command: sh -c 'echo "deb https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list'

- name: Update apt and install docker-ce
  apt: update_cache=yes name=docker-ce state=latest

# - name: Docker ==> Open 2376 port
#   lineinfile:
#     dest: /lib/systemd/system/docker.service
#     regexp: '^ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock$'
#     line: "ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2376 --containerd=/run/containerd/containerd.sock"
#     state: present
#   notify: Restart Docker

# - name: Docker ==> Close 2376 port
#   lineinfile:
#     dest: /lib/systemd/system/docker.service
#     regexp: '^ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2376 --containerd=/run/containerd/containerd.sock$'
#     line: "ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock"
#     state: present
#   notify: Restart Docker

- name: Docker ==> Copy daemon.json
  copy:
    src:  "files/daemon.json"
    dest: "/etc/docker/daemon.json"
    
- name: Restart Docker
  systemd:
    name: docker
    daemon_reload: yes
    state: restarted
